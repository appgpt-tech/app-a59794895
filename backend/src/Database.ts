//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { UsersEntity } from './db/Users.entity';
import { EmployeesEntity } from './db/Employees.entity';
import { EvaluationsEntity } from './db/Evaluations.entity';
import { PayrollEntity } from './db/Payroll.entity';
import { LeaveRequestsEntity } from './db/LeaveRequests.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      UsersEntity,
      EmployeesEntity,
      EvaluationsEntity,
      PayrollEntity,
      LeaveRequestsEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Users: [
        {
          userId: 1,
          name: 'name 1',
          email: 'email 1',
          password: 'password 1',
          role: 'role 1',
          id: 57,
        },
        {
          userId: 2,
          name: 'name 2',
          email: 'email 2',
          password: 'password 2',
          role: 'role 2',
          id: 41,
        },
        {
          userId: 3,
          name: 'name 3',
          email: 'email 3',
          password: 'password 3',
          role: 'role 3',
          id: 22,
        },
        {
          userId: 4,
          name: 'name 4',
          email: 'email 4',
          password: 'password 4',
          role: 'role 4',
          id: 47,
        },
        {
          userId: 5,
          name: 'name 5',
          email: 'email 5',
          password: 'password 5',
          role: 'role 5',
          id: 1,
        },
      ],
      Employees: [
        {
          employeeId: 1,
          firstName: 'firstName 1',
          lastName: 'lastName 1',
          middleName: 'middleName 1',
          dateOfBirth: '2024-11-26T04:47:00.341Z',
          gender: 'gender 1',
          nationality: 'nationality 1',
          maritalStatus: 'maritalStatus 1',
          contactInformation: 'contactInformation 1',
          address: 'address 1',
          department: 'department 1',
          position: 'position 1',
          manager: 'manager 1',
          employmentType: 'employmentType 1',
          startDate: '2025-03-31T02:26:27.404Z',
          endDate: '2023-04-28T06:51:59.676Z',
          salaryInformation: 0.27,
          profilePicture: 'profilePicture 1',
          id: 50,
        },
        {
          employeeId: 2,
          firstName: 'firstName 2',
          lastName: 'lastName 2',
          middleName: 'middleName 2',
          dateOfBirth: '2023-06-04T09:14:51.656Z',
          gender: 'gender 2',
          nationality: 'nationality 2',
          maritalStatus: 'maritalStatus 2',
          contactInformation: 'contactInformation 2',
          address: 'address 2',
          department: 'department 2',
          position: 'position 2',
          manager: 'manager 2',
          employmentType: 'employmentType 2',
          startDate: '2023-12-09T04:27:36.119Z',
          endDate: '2023-10-28T06:58:26.285Z',
          salaryInformation: 0.48,
          profilePicture: 'profilePicture 2',
          id: 63,
        },
        {
          employeeId: 3,
          firstName: 'firstName 3',
          lastName: 'lastName 3',
          middleName: 'middleName 3',
          dateOfBirth: '2023-05-10T17:45:52.975Z',
          gender: 'gender 3',
          nationality: 'nationality 3',
          maritalStatus: 'maritalStatus 3',
          contactInformation: 'contactInformation 3',
          address: 'address 3',
          department: 'department 3',
          position: 'position 3',
          manager: 'manager 3',
          employmentType: 'employmentType 3',
          startDate: '2024-12-08T08:20:52.145Z',
          endDate: '2023-05-27T22:02:39.058Z',
          salaryInformation: 0.19,
          profilePicture: 'profilePicture 3',
          id: 79,
        },
        {
          employeeId: 4,
          firstName: 'firstName 4',
          lastName: 'lastName 4',
          middleName: 'middleName 4',
          dateOfBirth: '2024-09-05T01:57:51.607Z',
          gender: 'gender 4',
          nationality: 'nationality 4',
          maritalStatus: 'maritalStatus 4',
          contactInformation: 'contactInformation 4',
          address: 'address 4',
          department: 'department 4',
          position: 'position 4',
          manager: 'manager 4',
          employmentType: 'employmentType 4',
          startDate: '2023-05-31T20:44:54.068Z',
          endDate: '2024-12-10T05:50:37.059Z',
          salaryInformation: 0.15,
          profilePicture: 'profilePicture 4',
          id: 19,
        },
        {
          employeeId: 5,
          firstName: 'firstName 5',
          lastName: 'lastName 5',
          middleName: 'middleName 5',
          dateOfBirth: '2025-01-12T17:53:14.156Z',
          gender: 'gender 5',
          nationality: 'nationality 5',
          maritalStatus: 'maritalStatus 5',
          contactInformation: 'contactInformation 5',
          address: 'address 5',
          department: 'department 5',
          position: 'position 5',
          manager: 'manager 5',
          employmentType: 'employmentType 5',
          startDate: '2025-03-20T01:27:45.394Z',
          endDate: '2024-02-20T10:28:16.315Z',
          salaryInformation: 0.62,
          profilePicture: 'profilePicture 5',
          id: 29,
        },
      ],
      Evaluations: [
        {
          reviewId: 1,
          employeeId: 1,
          periodStart: '2024-02-17T20:38:37.908Z',
          periodEnd: '2025-04-07T22:15:44.599Z',
          goalsObjectives: 'goalsObjectives 1',
          achievements: 'achievements 1',
          improvementAreas: 'improvementAreas 1',
          feedbackFromSupervisor: 'feedbackFromSupervisor 1',
          overallRating: 1,
          recommendations: 'recommendations 1',
          id: 31,
        },
        {
          reviewId: 2,
          employeeId: 2,
          periodStart: '2023-05-01T13:46:44.325Z',
          periodEnd: '2024-06-23T16:38:32.680Z',
          goalsObjectives: 'goalsObjectives 2',
          achievements: 'achievements 2',
          improvementAreas: 'improvementAreas 2',
          feedbackFromSupervisor: 'feedbackFromSupervisor 2',
          overallRating: 2,
          recommendations: 'recommendations 2',
          id: 41,
        },
        {
          reviewId: 3,
          employeeId: 3,
          periodStart: '2024-08-16T13:56:54.988Z',
          periodEnd: '2023-10-13T19:28:54.920Z',
          goalsObjectives: 'goalsObjectives 3',
          achievements: 'achievements 3',
          improvementAreas: 'improvementAreas 3',
          feedbackFromSupervisor: 'feedbackFromSupervisor 3',
          overallRating: 3,
          recommendations: 'recommendations 3',
          id: 36,
        },
        {
          reviewId: 4,
          employeeId: 4,
          periodStart: '2023-12-27T06:38:36.328Z',
          periodEnd: '2023-12-25T07:58:08.626Z',
          goalsObjectives: 'goalsObjectives 4',
          achievements: 'achievements 4',
          improvementAreas: 'improvementAreas 4',
          feedbackFromSupervisor: 'feedbackFromSupervisor 4',
          overallRating: 4,
          recommendations: 'recommendations 4',
          id: 68,
        },
        {
          reviewId: 5,
          employeeId: 5,
          periodStart: '2025-01-23T03:47:40.117Z',
          periodEnd: '2024-06-30T00:53:15.088Z',
          goalsObjectives: 'goalsObjectives 5',
          achievements: 'achievements 5',
          improvementAreas: 'improvementAreas 5',
          feedbackFromSupervisor: 'feedbackFromSupervisor 5',
          overallRating: 5,
          recommendations: 'recommendations 5',
          id: 57,
        },
      ],
      Payroll: [
        {
          payrollId: 1,
          employeeId: 1,
          periodStartDate: '2024-04-18T18:38:00.691Z',
          periodEndDate: '2024-05-21T20:37:04.609Z',
          grossSalary: 0.75,
          deductions: 0.6,
          netSalary: 0.81,
          payDate: '2024-08-03T00:24:40.226Z',
          overtimeHours: 1,
          overtimePay: 0.69,
          id: 67,
        },
        {
          payrollId: 2,
          employeeId: 2,
          periodStartDate: '2024-08-31T05:09:14.649Z',
          periodEndDate: '2023-07-09T01:36:30.681Z',
          grossSalary: 0.1,
          deductions: 0.62,
          netSalary: 0.5,
          payDate: '2024-09-14T12:19:23.559Z',
          overtimeHours: 2,
          overtimePay: 0.05,
          id: 74,
        },
        {
          payrollId: 3,
          employeeId: 3,
          periodStartDate: '2024-04-21T06:22:21.944Z',
          periodEndDate: '2024-02-29T17:27:03.736Z',
          grossSalary: 0.09,
          deductions: 0.73,
          netSalary: 0.84,
          payDate: '2025-02-03T13:02:31.648Z',
          overtimeHours: 3,
          overtimePay: 0.16,
          id: 10,
        },
        {
          payrollId: 4,
          employeeId: 4,
          periodStartDate: '2023-10-14T15:08:59.235Z',
          periodEndDate: '2023-12-29T17:37:42.557Z',
          grossSalary: 0.62,
          deductions: 0.72,
          netSalary: 0.05,
          payDate: '2023-05-19T02:59:26.858Z',
          overtimeHours: 4,
          overtimePay: 0.85,
          id: 76,
        },
        {
          payrollId: 5,
          employeeId: 5,
          periodStartDate: '2024-07-20T09:19:09.224Z',
          periodEndDate: '2024-01-18T13:20:02.958Z',
          grossSalary: 0.38,
          deductions: 0.33,
          netSalary: 0.88,
          payDate: '2024-01-16T14:43:37.327Z',
          overtimeHours: 5,
          overtimePay: 0.79,
          id: 8,
        },
      ],
      LeaveRequests: [
        {
          requestId: 1,
          employeeId: 1,
          typeOfLeave: 'typeOfLeave 1',
          startDate: '2023-11-05T13:45:41.758Z',
          endDate: '2024-12-26T23:45:30.213Z',
          reason: 'reason 1',
          approvalStatus: 'approvalStatus 1',
          approverUserId: 1,
          id: 67,
        },
        {
          requestId: 2,
          employeeId: 2,
          typeOfLeave: 'typeOfLeave 2',
          startDate: '2023-07-14T23:46:47.941Z',
          endDate: '2023-09-14T15:21:44.539Z',
          reason: 'reason 2',
          approvalStatus: 'approvalStatus 2',
          approverUserId: 2,
          id: 41,
        },
        {
          requestId: 3,
          employeeId: 3,
          typeOfLeave: 'typeOfLeave 3',
          startDate: '2024-10-07T22:00:55.044Z',
          endDate: '2023-06-07T18:49:09.416Z',
          reason: 'reason 3',
          approvalStatus: 'approvalStatus 3',
          approverUserId: 3,
          id: 70,
        },
        {
          requestId: 4,
          employeeId: 4,
          typeOfLeave: 'typeOfLeave 4',
          startDate: '2024-10-30T13:14:28.751Z',
          endDate: '2023-12-18T17:03:26.502Z',
          reason: 'reason 4',
          approvalStatus: 'approvalStatus 4',
          approverUserId: 4,
          id: 1,
        },
        {
          requestId: 5,
          employeeId: 5,
          typeOfLeave: 'typeOfLeave 5',
          startDate: '2025-03-11T06:47:58.074Z',
          endDate: '2024-11-22T13:33:49.719Z',
          reason: 'reason 5',
          approvalStatus: 'approvalStatus 5',
          approverUserId: 5,
          id: 91,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('EmployeesEntity', data.Employees);
      await this.SeedResource('EvaluationsEntity', data.Evaluations);
      await this.SeedResource('PayrollEntity', data.Payroll);
      await this.SeedResource('LeaveRequestsEntity', data.LeaveRequests);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
